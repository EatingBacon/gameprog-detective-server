{
	"info": {
		"_postman_id": "a927b6e1-6660-41bc-8d69-83d11a2926ae",
		"name": "detective-game-walkthrough",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "create user",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9c51f1cc-0048-40be-8566-e56a739bbfe1",
						"exec": [
							"pm.environment.set('user_id', pm.response.json().userId);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/create",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"create"
					]
				},
				"description": "create a new user - should be done by the app"
			},
			"response": []
		},
		{
			"name": "send mocked contacts",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n  \"displayNamePrimary\": \"Paul Methfessel\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"paul@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Tim Garrels\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"tim@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Antonio Dimeo\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"antonio@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Robin Wersich\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"robin@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Joana Bergsieck\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"joana@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Jonas Kordt\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"jonas@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Clara Uktar\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"jonas@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Jakob Stigloher\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"jakob@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n},\n{\n  \"displayNamePrimary\": \"Ulrike Herwig\",\n  \"homeAddress\": \"HPI\",\n  \"email\": \"ulrike@gmail.com\",\n  \"organisation\": \"HPI\",\n  \"birthday\": \"01.01.2000\",\n  \"phoneNumbers\": [], \n  \"textMessages\": [] \n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/contact",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"contact"
					]
				},
				"description": "provide some contacts to the server"
			},
			"response": []
		},
		{
			"name": "TASK interview caretaker (Potsdam Hbf)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a197d97f-00cb-4765-b9b5-f76c71df5451",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "cdc3e821-5a2c-4b0a-b39c-b6ae575878f1",
						"exec": [
							"pm.environment.set('current_task', \"interview_caretaker\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"timeInUtcSeconds\": 1609498800,\n\t\"latitude\": 52.391514,\n\t\"longitude\": 13.065583\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/location",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"location"
					]
				},
				"description": "post the location of Potsdam Hbf with the current timestamp"
			},
			"response": []
		},
		{
			"name": "TASK take photo of cameras",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a197d97f-00cb-4765-b9b5-f76c71df5451",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "cdc3e821-5a2c-4b0a-b39c-b6ae575878f1",
						"exec": [
							"pm.environment.set('current_task', \"investigate_cameras\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/image",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"image"
					]
				},
				"description": "post empty image"
			},
			"response": []
		},
		{
			"name": "TASK make analyst appointment (Calendar)",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a197d97f-00cb-4765-b9b5-f76c71df5451",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "cdc3e821-5a2c-4b0a-b39c-b6ae575878f1",
						"exec": [
							"pm.environment.set('current_task', \"make_analyst_appointment\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[{\n  \"title\": \"arbeiten\",\n  \"eventLocation\": \"HPI\",\n  \"startInUtcSeconds\": null,\n  \"endInUtcSeconds\": null\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/calendar",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"calendar"
					]
				},
				"description": "send mocked calendar data to the server"
			},
			"response": []
		},
		{
			"name": "TASK talk to analyst (HPI)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "8e5ff97b-2d87-4fda-b952-913251b4297b",
						"exec": [
							"pm.environment.set('current_task', \"talk_to_analyst\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"timeInUtcSeconds\": 1609502400,\n\t\"latitude\": 52.394258,\n\t\"longitude\": 13.133816\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/location",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"location"
					]
				},
				"description": "post the location of the HPI with the current timestamp"
			},
			"response": []
		},
		{
			"name": "TASK arrest suspect (Dianastra√üe 16)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2c2a4dd4-1d87-4d79-aef4-783b21480b88",
						"exec": [
							"pm.environment.set('current_task', \"arrest_suspect\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"timeInUtcSeconds\": 1609513200,\n\t\"latitude\": 52.387854,\n\t\"longitude\": 13.126121\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/location",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"location"
					]
				},
				"description": "post the location of the suspect home with the current timestamp"
			},
			"response": []
		},
		{
			"name": "TASK observe suspect (Pub a la Pub)",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "31104c57-60df-4a5d-8a09-f15dfb31646c",
						"exec": [
							"pm.environment.set('current_task', \"observe_suspect\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n\t\"timeInUtcSeconds\": {{$timestamp}},\n\t\"latitude\": 52.395616,\n\t\"longitude\": 13.056481\n}]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/data/location",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"data",
						"location"
					]
				},
				"description": "post the location of the Pub a la Pub with the current timestamp"
			},
			"response": []
		},
		{
			"name": "TASK FINISHED request check",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "87a578ce-c111-4294-b95b-d155b2ba75ee",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/tasks/{{current_task}}/finished",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"tasks",
						"{{current_task}}",
						"finished"
					]
				},
				"description": "request the server to check if the recently provided data fulfilled the task"
			},
			"response": []
		},
		{
			"name": "display all users",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users"
					]
				},
				"description": "display all users registered on the server"
			},
			"response": []
		},
		{
			"name": "display user",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}"
					]
				},
				"description": "display game data about the user"
			},
			"response": []
		},
		{
			"name": "display tasks",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/tasks",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"tasks"
					]
				},
				"description": "show the current tasks of the user"
			},
			"response": []
		},
		{
			"name": "reset user",
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/reset",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"reset"
					]
				},
				"description": "deletes all properties of a user but its ID and token"
			},
			"response": []
		},
		{
			"name": "set current story point",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/story/current-story-point?set=",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"story",
						"current-story-point"
					],
					"query": [
						{
							"key": "set",
							"value": ""
						}
					]
				},
				"description": "jump to an arbitraty story point"
			},
			"response": []
		},
		{
			"name": "reset story",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/story/reset",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"story",
						"reset"
					]
				},
				"description": "reset only the story (and tasks), but not any other data for the user"
			},
			"response": []
		},
		{
			"name": "send phonenumber",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/phonenumber/{{phonenumber}}",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"phonenumber",
						"{{phonenumber}}"
					]
				},
				"description": "send your phonenumber in international format (+49...) to the server to enable the telegram highjack"
			},
			"response": []
		},
		{
			"name": "send Telegram access code",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://{{server_ip}}:8080/users/{{user_id}}/telegram-code/{{telegram_code}}",
					"protocol": "http",
					"host": [
						"{{server_ip}}"
					],
					"port": "8080",
					"path": [
						"users",
						"{{user_id}}",
						"telegram-code",
						"{{telegram_code}}"
					]
				},
				"description": "the App would crawl your SMS and do this - if you don't use the app, you can do it manually here"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "e5d7f5c6-7ec8-47b3-b356-f0c634c5d4c8",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ab3c6e11-c357-4c13-900a-8e3c16ae2689",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}